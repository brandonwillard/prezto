#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
bindkey -M viins '^r' history-incremental-search-backward
bindkey -M vicmd '^r' history-incremental-search-backward

# maybe a fix for xmonad+java issues
export _JAVA_AWT_WM_NONREPARENTING=1
# export JAVA_TOOL_OPTIONS='--add-modules=java.se.ee'

#. $HOME/projects/code/torch/install/bin/torch-activate

PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB+:}${PERL5LIB}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT+:}${PERL_LOCAL_LIB_ROOT}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"${HOME}/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"; export PERL_MM_OPT;

if [ -n "$commands[aws_zsh_completer.sh]" ] ; then
  source aws_zsh_completer.sh
fi

export FZF_CTRL_T_OPTS="--preview '(highlight -O ansi -l {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"
export FZF_DEFAULT_OPTS="--multi"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

if [ -n "$commands[nvim-terminal-edit.py]" ] ; then
  compdef nvim-terminal-edit.py=nvim
  # alias nvim='nvim-terminal-edit.py'
  alias vim='nvim-terminal-edit.py'
fi

if [ -n "$commands[hub]" ] ; then
  eval $(hub alias -s)
fi

export ANACONDA_HOME=~/apps/anaconda3

path=(
  /usr/local/bin
  /usr/local/sbin
  $HOME/.local/bin
  $HOME/.cabal/bin
  $HOME/apps/Zotero_linux-x86_64
  $path
)

#path=($HOME/apps/anaconda3/bin $path)
path=($path $(npm bin 2> /dev/null))

# Remove non-valid paths
for x in "${path[@]}"; do
  if [ ! -d "$x" ]; then
    path=("${(@)path:#$x}")
  fi
done

# New (>4.4) conda activation
. $ANACONDA_HOME/etc/profile.d/conda.sh
conda activate base


#
# Auto conda env activate when environment.yml is found
# Inspired by https://github.com/chdoig/conda-auto-env/blob/master/conda_auto_env.sh 
# 
function conda_auto_env() {
  if [ -e "environment.yml" ]; then

    ENV_NAME=$(head -n 1 environment.yml | cut -f2 -d ' ')

    if [[ $CONDA_DEFAULT_ENV != $ENV_NAME ]]; then

      echo "activating conda env $ENV_NAME..."

      conda activate $ENV_NAME

      # if [ $? -eq 0 ]; then
      #   :
      # else
      #   # Create the environment and activate
      #   echo "Conda env '$ENV' doesn't exist."
      #   conda env create -q -f environment.yml
      #   conda activate $ENV
      # fi
    fi
  fi
}

# export PROMPT_COMMAND=conda_auto_env
precmd_functions=(conda_auto_env)
